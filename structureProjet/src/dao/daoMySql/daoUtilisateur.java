package dao.daoMySql;

import dao.IDao;
import dao.daoExceptions.DAOException;
import presentation.modele.Client;
import presentation.modele.Sexe;
import presentation.modele.Utilisateur;

import javax.swing.text.Utilities;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class daoUtilisateur implements IDao<Utilisateur,Long> {

    private Connection connection  ;

    public daoUtilisateur(Connection con){
        this.connection=con;
    }

    private static  final String SELECTBYID =
                "SELECT * FROM Utilisateur WHERE idUtilisateur = ?";

    @Override
    public Utilisateur findById(Long aLong) {
        Utilisateur ut=null;
        PreparedStatement pstmt = null;

        try{

            pstmt = Utilitaire.initPS(connection,SELECTBYID,false,aLong);

            ResultSet rs = pstmt.executeQuery();

            ut= map(rs);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        return ut;
    }


    @Override
    public List<Utilisateur> findAll() {
        List<Utilisateur> cl = new ArrayList<Utilisateur>();

        try{
            PreparedStatement pstmt = null;
            pstmt = Utilitaire.initPS(connection,"Select * from utilisateur ;",false);

            ResultSet rs = pstmt.executeQuery();
            Utilisateur ut;
            while (rs.next()) {
                ut=map(rs);
                cl.add(ut);
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
        return cl;
    }


    private static final String INSERT ="INSERT INTO Utilisateur VALUE(?,?,?,?,?,?)";

    @Override
    public Utilisateur save(Utilisateur utilisateur) {
        PreparedStatement pstmt = null;
        ResultSet AutoGeneratedValue = null;
        try{
            pstmt = Utilitaire.initPS(connection,INSERT,true,
                      utilisateur.getNom(),
                      utilisateur.getPrenom(),
                      utilisateur.getLogin(),
                      utilisateur.getMotDePasse(),
                      utilisateur.getRole());

            int rs = pstmt.executeUpdate();

            if(rs == 0)
                throw new DAOException("INSERERTION ECHOUE DS La TABLE UTILISATEUR");

            AutoGeneratedValue = pstmt.getGeneratedKeys();



        }
        catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }

    @Override
    public List<Utilisateur> saveAll(List<Utilisateur> liste) {

        liste.forEach( uti -> save(uti) );

        return liste;
    }



    private static final String UPDATE = "UPDATE utilisateur SET " +
            "nom=?,prenom=?,login=?,motDePasse=?,role=? WHERE idUtilisateur=? ";

    @Override
    public Utilisateur update(Utilisateur utilisateur) throws DAOException {

        PreparedStatement pstmt = null;
        int rs=0;

        try{
             pstmt = Utilitaire.initPS(connection,UPDATE,false,
                    utilisateur.getNom(),
                    utilisateur.getPrenom(),
                    utilisateur.getLogin(),
                    utilisateur.getMotDePasse(),
                    utilisateur.getRole(),
                     utilisateur.getId()
                     );

           rs = pstmt.executeUpdate();

            if(rs == 0) {
                throw new DAOException("0 LIGNE MODIFIER DS La TABLE UTILISATEUR");
            }
            else {
                System.out.println("Utilisateur avec ID="+utilisateur.getId()+
                        "MODIFIE Avec SUCCES ");
            }
        }catch (SQLException e) {
           e.printStackTrace();
        }

        return utilisateur;
    }


    private static final  String DELETE="DELETE FROM Utilisateur WHERE idUtilisateur = ?" ;
    @Override

    public Boolean delete(Utilisateur utilisateur) throws DAOException {
       deleteById(utilisateur.getId());
    }

    @Override
    public Boolean deleteById(Long aLong) throws DAOException {
        PreparedStatement pstmt = null;
        int rs=0;

        try{
            pstmt = Utilitaire.initPS(connection,DELETE,
                    false,aLong);

            rs = pstmt.executeUpdate();

            if( rs == 0 ){
                throw new DAOException("0 Ligne Supprimé DS La Table Utilisateur");
            }
            else{
                System.out.println("Utilisateur avec ID="+aLong+
                        "Supprimée Avec Succes ");
            }

        }  catch (SQLException e) {
            e.printStackTrace();
        }

        return true;

    }



    public Utilisateur map(ResultSet rs) throws SQLException {

        Utilisateur utilisateur = new Utilisateur();

        if(rs.next()){
            utilisateur.setId(rs.getLong("id"));
            utilisateur.setNom(rs.getString("Nom"));
            utilisateur.setPrenom(rs.getString("prenom"));
            utilisateur.setMotDePasse(rs.getString("motDePasse"));
            utilisateur.setLogin(rs.getString("Login"));
            utilisateur.setRole(rs.getString("role"));
        }

        return utilisateur;

    }
}
